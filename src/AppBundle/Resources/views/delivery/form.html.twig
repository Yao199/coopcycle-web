{% extends layout %}

{% form_theme form '@App/form/delivery.html.twig' %}

{% block breadcrumb %}

{% set delivery = form.vars.value %}

<li><a href="{{ path('admin_deliveries') }}">{% trans %}adminDashboard.deliveries.title{% endtrans %}</a></li>
{% if delivery.id is not null %}
<li>#{{ delivery.id }}</li>
{% else %}
<li>{% trans %}adminDashboard.deliveries.createNew{% endtrans %}</li>
{% endif %}

{% endblock %}

{% block content %}

{% set delivery = form.vars.value %}

{{ form_start(form) }}

  {% if order is defined and order is not empty %}

    {% if order.state == 'cart' %}
    <div class="alert alert-warning">
      <i class="fa fa-exclamation-triangle"></i> {{ 'form.delivery.to_be_confirmed.warning'|trans }}
      <span class="pull-right">
        <a class="btn btn-xs btn-success" href="{{ path('admin_order', { id: order.id }) }}">
          {{ 'form.delivery.view_order'|trans }}
        </a>
      </span>
    </div>
    {% endif %}

    {% if order.state == 'new' %}
    <div class="alert alert-info">
      <i class="fa fa-info-circle"></i> {{ 'form.delivery.has_order.info'|trans }}
      <span class="pull-right">
        <a class="btn btn-xs btn-success" href="{{ path('admin_order', { id: order.id }) }}">
          {{ 'form.delivery.view_order'|trans }}
        </a>
      </span>
    </div>
    {% endif %}

  {% endif %}

  <div class="row">
    <div class="col-sm-6">
      {% if form.store is defined %}
        {{ form_row(form.store) }}
      {% endif %}
      {% if form.vehicle is defined %}
        {{ form_row(form.vehicle) }}
      {% endif %}
      {{ form_row(form.weight) }}
      {{ form_row(form.pickup) }}
      {{ form_row(form.dropoff) }}
    </div>
    <div class="col-sm-6">

      <div class="delivery-price">
        <span>{% trans %}form.delivery.price.label{% endtrans %}</span>
        <span id="delivery_price">{{ 0|price_format }}</span>
        <span id="delivery_price_error" class="delivery-price-error"></span>
      </div>

      <div class="embed-responsive embed-responsive-16by9">
        <div class="embed-responsive-item" id="map"></div>
      </div>
      <hr>
      <div class="form-horizontal">

        {{ form_errors(form) }}

        <div class="form-group">
          <label class="col-sm-2 control-label" for="delivery_distance">
            {% trans %}form.delivery.distance.label{% endtrans %}
          </label>
          <div class="col-sm-10">
            <p class="form-control-static">
              <span id="delivery_distance">
                {% if delivery.distance is not empty %}
                  {{ delivery.distance|meters_to_kilometers }}
                {% endif %}
              </span>
            </p>
          </div>
        </div>

        <div class="form-group">
          <label class="col-sm-2 control-label" for="delivery_duration">
            {% trans %}form.delivery.duration.label{% endtrans %}
          </label>
          <div class="col-sm-10">
            <p class="form-control-static">
              <span id="delivery_duration">
                {% if delivery.duration is not empty %}
                  {{ delivery.duration|seconds_to_minutes }}
                {% endif %}
              </span>
            </p>
          </div>
        </div>

      </div>
      <hr>
      <button id="delivery-submit" type="submit" class="btn btn-block btn-lg btn-primary">
        <i class="fa fa-spinner fa-spin hidden" id="loader"></i>
        {% trans %}adminDashboard.deliveries.save{% endtrans %}
      </button>

    </div>
  </div>

{{ form_end(form) }}
{% endblock %}

{% block scripts %}
{{ encore_entry_script_tags('js/delivery-form') }}
<script src="https://maps.googleapis.com/maps/api/js?key={{ coopcycle_setting('google_api_key') }}&libraries=places&callback=initMap"
  async defer></script>
{% if form.pickup.tagsAsString is defined or form.dropoff.tagsAsString is defined %}
<script>
  $.getJSON("{{ path('admin_tags', { format: 'json' }) }}", function(tags) {
    new CoopCycle.TagsInput(document.querySelector('#delivery_pickup_tagsAsString_widget'), {
      tags,
      defaultValue: [],
      onChange: function(tags) {
        var slugs = tags.map(function(tag) { return tag.slug; });
        document.querySelector('#delivery_pickup_tagsAsString').value = slugs.join(' ');
      }
    });
    new CoopCycle.TagsInput(document.querySelector('#delivery_dropoff_tagsAsString_widget'), {
      tags,
      defaultValue: [],
      onChange: function(tags) {
        var slugs = tags.map(function(tag) { return tag.slug; });
        document.querySelector('#delivery_dropoff_tagsAsString').value = slugs.join(' ');
      }
    });
  });
</script>
{% endif %}
{% endblock %}
